-- This standardizes the counts using the stationary population mean and stdanrd deviation before calculating the moving average of standardized counts. This should remove the effect of changing volume
with stationary as (select epochstartmillis, avg(cnt) as popmean, stddev_pop(cnt) as popstdv from cnt_1hr1 where date = 121106 group by epochstartmillis) select ngramarr, avg((cnt - popmean)/popstdv) as avgstdcnt, stddev_pop((cnt - popmean)/popstdv) as dvstdcnt from stationary join cnt_1hr1 std on stationary.epochstartmillis = std.epochstartmillis where date = 121106 and cnt > 5 group by ngramarr order by avgstdcnt desc limit 10000;

-- To use the above to select ngrams whose current count is more than what's expected of them, we do:
with stationary as (select epochstartmillis, avg(cnt) as popmean, stddev_pop(cnt) as popstdv from cnt_1hr1 where date >= 121025 and date < 121106 group by epochstartmillis), moving as (select ngramarr, avg((cnt - popmean)/popstdv) as avgstdcnt, stddev_pop((cnt - popmean)/popstdv) as dvstdcnt from stationary join cnt_1hr1 moving on stationary.epochstartmillis = moving.epochstartmillis where date >= 121025 and date <121106 and cnt > 5 group by ngramarr) select *, (curr.cnt - popmean)/popstdv as currstcnt from cnt_1hr1 curr join moving on curr.ngramarr = moving.ngramarr join stationary on curr.epochstartmillis = stationary.epochstartmillis + (24*3600000) where date = 121106 and (curr.cnt - popmean)/popstdv > (avgstdcnt); -- + 

-- the concept of the hour of day
with hod as (select (epochstartmillis%(24*3600000))/3600000 as hod, avg(cnt) as mean, stddev_pop(cnt) as dv from cnt_1hr1 where date >= 121025 and date < 121106 and cnt > 5 group by (epochstartmillis%(24*3600000))/3600000), moving as (select ngramarr, avg((cnt - hod.mean)/hod.dv) as meanstdcnt, stddev_pop((cnt - hod.mean)/hod.dv) as dvstdcnt from hod join cnt_1hr1 moving on hod.hod = (moving.epochstartmillis%(24*3600000))/3600000 where date >= 121025 and date < 121106 and cnt > 5 group by ngramarr) select * from moving order by meanstdcnt desc limit 10000;

-- using the above to detect more than what's expected:
with hod as (select (epochstartmillis%(24*3600000))/3600000 as hod, avg(cnt) as mean, stddev_pop(cnt) as dv from cnt_1hr1 where date >= 121025 and date < 121106 and cnt > 5 group by (epochstartmillis%(24*3600000))/3600000), moving as (select ngramarr, avg((cnt - hod.mean)/hod.dv) as meanstdcnt, stddev_pop((cnt - hod.mean)/hod.dv) as dvstdcnt from hod join cnt_1hr1 moving on hod.hod = (moving.epochstartmillis%(24*3600000))/3600000 where date >= 121025 and date < 121106 and cnt > 5 group by ngramarr) select hod.hod, curr.ngramarr, (curr.cnt - hod.mean)/hod.dv as currstdcnt, meanstdcnt, dvstdcnt, case when dvstdcnt <> 0 then (((curr.cnt - hod.mean)/hod.dv) - meanstdcnt) / (@dvstdcnt) else NULL end as ratstdcnt from cnt_1hr1 curr join moving on curr.ngramarr = moving.ngramarr join hod on (curr.epochstartmillis%(24*3600000))/3600 = hod.hod where date >= 121025 and date < 121106 and cnt > 5 order by ratstdcnt desc limit 10000; -- (((curr.cnt - hod.mean)/hod.dv) - meanstdcnt) - dvstdcnt as diffstdcnt,

